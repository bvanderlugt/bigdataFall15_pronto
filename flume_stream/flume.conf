sandbox.sources = prontolog
sandbox.channels = mem_channel
sandbox.sinks = sink_to_hdfs


# Define / Configure source
sandbox.sources.prontolog.type = exec
sandbox.sources.prontolog.command = /usr/bin/tail -F /var/log/pronto_data.json
sandbox.sources.prontolog.logStdErr = true
sandbox.sources.prontolog.restart = true
sandbox.sources.prontolog.channels = mem_channel


# channel
sandbox.channels.mem_channel.type = memory
sandbox.channels.mem_channel.capacity = 100
# sandbox.channels.mem_channel.transactionCapacity = 100


# HDFS sink
sandbox.sinks.sink_to_hdfs.type = hdfs
sandbox.sinks.sink_to_hdfs.channel = mem_channel
sandbox.sinks.sink_to_hdfs.hdfs.fileType = DataStream
# sandbox.sinks.sink_to_hdfs.hdfs.path = /flume/pronto/DTC/%y-%m-%d/%H-%M/%S
sandbox.sinks.sink_to_hdfs.hdfs.path = /flume/pronto/
sandbox.sinks.sink_to_hdfs.hdfs.useLocalTimeStamp = true
sandbox.sinks.sink_to_hdfs.hdfs.round = true
sandbox.sinks.sink_to_hdfs.hdfs.roundValue = 10
sandbox.sinks.sink_to_hdfs.hdfs.roundUnit = minute
sandbox.sinks.sink_to_hdfs.hdfs.filePrefix = prontolog
sandbox.sinks.sink_to_hdfs.hdfs.fileSuffix = .json
sandbox.sinks.sink_to_hdfs.hdfs.writeFormat = text
sandbox.sinks.sink_to_hdfs.hdfs.rollSize = 0
sandbox.sinks.sink_to_hdfs.hdfs.rollCount = 1
sandbox.sinks.sink_to_hdfs.hdfs.rollInterval = 0
sandbox.sinks.sink_to_hdfs.hdfs.callTimeout = 25000




